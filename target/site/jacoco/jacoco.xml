<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="sudoku"><sessioninfo id="DESKTOP-S2KSNTS-40fc854a" start="1521486680010" dump="1521486680549"/><sessioninfo id="DESKTOP-S2KSNTS-fa73e010" start="1521487978582" dump="1521487979020"/><sessioninfo id="DESKTOP-S2KSNTS-70d99eb8" start="1521489571451" dump="1521489572044"/><sessioninfo id="DESKTOP-S2KSNTS-c81d9f61" start="1521489979077" dump="1521489980023"/><sessioninfo id="DESKTOP-S2KSNTS-6486b7c0" start="1521492446915" dump="1521492447789"/><sessioninfo id="DESKTOP-S2KSNTS-dc8b3ab1" start="1521492489700" dump="1521492490523"/><sessioninfo id="DESKTOP-S2KSNTS-d57ebf14" start="1521538454122" dump="1521538454655"/><sessioninfo id="DESKTOP-S2KSNTS-ef889514" start="1521538812302" dump="1521538812982"/><sessioninfo id="DESKTOP-S2KSNTS-6234df3d" start="1521538948298" dump="1521538948829"/><sessioninfo id="DESKTOP-S2KSNTS-c2281af8" start="1521538965597" dump="1521538966101"/><sessioninfo id="DESKTOP-S2KSNTS-5eefe7f0" start="1521538987062" dump="1521538987602"/><sessioninfo id="DESKTOP-S2KSNTS-3417844a" start="1521539608338" dump="1521539608990"/><sessioninfo id="DESKTOP-S2KSNTS-7a113961" start="1523267298458" dump="1523267299453"/><sessioninfo id="DESKTOP-S2KSNTS-c83256d7" start="1523267301291" dump="1523267302543"/><sessioninfo id="DESKTOP-S2KSNTS-268ed4d3" start="1523267358654" dump="1523267359789"/><sessioninfo id="DESKTOP-S2KSNTS-b0609b2e" start="1523267397661" dump="1523267398517"/><sessioninfo id="DESKTOP-S2KSNTS-80573d1d" start="1523267512061" dump="1523267512949"/><sessioninfo id="DESKTOP-S2KSNTS-bd960d22" start="1523267532745" dump="1523267533529"/><sessioninfo id="DESKTOP-S2KSNTS-45bdc343" start="1523267607642" dump="1523267608626"/><sessioninfo id="DESKTOP-S2KSNTS-1e59691d" start="1523267670010" dump="1523267671239"/><sessioninfo id="DESKTOP-S2KSNTS-782601ef" start="1523270754345" dump="1523270754787"/><sessioninfo id="DESKTOP-S2KSNTS-840df812" start="1523290571946" dump="1523290572866"/><sessioninfo id="DESKTOP-S2KSNTS-7e1cbca8" start="1523290873375" dump="1523290874332"/><sessioninfo id="DESKTOP-S2KSNTS-ffc3e805" start="1523291156755" dump="1523291157715"/><sessioninfo id="DESKTOP-S2KSNTS-835011c5" start="1523291321668" dump="1523291322630"/><sessioninfo id="DESKTOP-S2KSNTS-1fec6b1f" start="1523291497751" dump="1523291498686"/><sessioninfo id="DESKTOP-S2KSNTS-71cc0fe8" start="1523291560633" dump="1523291561849"/><sessioninfo id="DESKTOP-S2KSNTS-9dc9515a" start="1523291799576" dump="1523291800470"/><sessioninfo id="DESKTOP-S2KSNTS-87e9a63c" start="1523292152853" dump="1523292153775"/><sessioninfo id="DESKTOP-S2KSNTS-30adf9d3" start="1523351730423" dump="1523351731553"/><sessioninfo id="DESKTOP-S2KSNTS-42fe8cfc" start="1523467927194" dump="1523467928172"/><sessioninfo id="DESKTOP-S2KSNTS-1f38fab" start="1523467969352" dump="1523467970395"/><sessioninfo id="DESKTOP-S2KSNTS-4e585bbb" start="1523475147197" dump="1523475148713"/><sessioninfo id="DESKTOP-S2KSNTS-3f2c908d" start="1523479579284" dump="1523479580090"/><sessioninfo id="DESKTOP-S2KSNTS-a55c3ba9" start="1523479649741" dump="1523479651120"/><sessioninfo id="DESKTOP-S2KSNTS-d50b517b" start="1523479676119" dump="1523479677193"/><sessioninfo id="DESKTOP-S2KSNTS-b708bbd0" start="1523479753594" dump="1523479754700"/><sessioninfo id="DESKTOP-S2KSNTS-8c99762b" start="1523892350794" dump="1523892351637"/><sessioninfo id="DESKTOP-S2KSNTS-e16ce4a2" start="1523892412388" dump="1523892413352"/><sessioninfo id="DESKTOP-S2KSNTS-faa7ff31" start="1523892463460" dump="1523892464484"/><sessioninfo id="DESKTOP-S2KSNTS-df2e8e32" start="1523892494509" dump="1523892495327"/><sessioninfo id="DESKTOP-S2KSNTS-6096173c" start="1523956475459" dump="1523956476314"/><sessioninfo id="DESKTOP-S2KSNTS-86e75fe6" start="1523956549794" dump="1523956550814"/><sessioninfo id="DESKTOP-S2KSNTS-af8a58ea" start="1523956574147" dump="1523956575265"/><package name="sudoku"><class name="sudoku/SudokuBoard"><method name="&lt;init&gt;" desc="([[I)V" line="9"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkBoard" desc="()Z" line="35"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(II)I" line="50"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="set" desc="(III)Z" line="59"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRow" desc="(I)Lsudoku/SudokuRow;" line="73"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColumn" desc="(I)Lsudoku/SudokuColumn;" line="82"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBox" desc="(II)Lsudoku/SudokuBox;" line="90"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkNumber" desc="(III)Z" line="105"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="146"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="154"><counter type="INSTRUCTION" missed="4" covered="16"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="434"/><counter type="BRANCH" missed="2" covered="60"/><counter type="LINE" missed="2" covered="75"/><counter type="COMPLEXITY" missed="2" covered="40"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/SudokuBox"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="8"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/SudokuColumn"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/SudokuRow"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="7"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/Main"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="793" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="796" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="sudoku/SudokuField"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFieldValue" desc="()I" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFieldValue" desc="(I)Z" line="21"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="36"><counter type="INSTRUCTION" missed="4" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/SudokuBoardDaoFactory"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFileDao" desc="(Ljava/lang/String;)Lsudoku/Dao;" line="5"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="sudoku/BacktrackingSudokuSolver"><method name="&lt;init&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="solve" desc="(Lsudoku/SudokuBoard;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="99"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findEmpty" desc="(Lsudoku/SudokuBoard;)Lsudoku/Pair;" line="66"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="140"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/Pair"><method name="&lt;init&gt;" desc="(II)V" line="12"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFirst" desc="()I" line="20"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFirst" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSecond" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setSecond" desc="(I)V" line="32"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlag" desc="()Z" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFlag" desc="(Z)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/FileSudokuBoardDao"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="13"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="read" desc="()Lsudoku/SudokuBoard;" line="20"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="write" desc="(Lsudoku/SudokuBoard;)V" line="47"><counter type="INSTRUCTION" missed="4" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finalize" desc="()V" line="70"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="97"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="sudoku/SudokuVerify"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verify" desc="()Z" line="20"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="59"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="66" covered="118"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="14" covered="12"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileSudokuBoardDao.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="2"/><line nr="30" mi="0" ci="11" mb="0" cb="0"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="2"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="2"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="97"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="3" covered="26"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BacktrackingSudokuSolver.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="2"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="52" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="2"/><line nr="53" mi="0" ci="9" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="2"/><line nr="68" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="5" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="173"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="17"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SudokuBox.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SudokuVerify.java"><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="2"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="52" mb="0" cb="0"/><line nr="21" mi="0" ci="7" mb="0" cb="2"/><line nr="22" mi="0" ci="10" mb="0" cb="2"/><line nr="23" mi="0" ci="13" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="2"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="37" mi="7" ci="0" mb="2" cb="0"/><line nr="39" mi="6" ci="0" mb="4" cb="0"/><line nr="40" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="9" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="118"/><counter type="BRANCH" missed="10" covered="8"/><counter type="LINE" missed="14" covered="12"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SudokuColumn.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Main.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="6" mi="372" ci="0" mb="0" cb="0"/><line nr="16" mi="372" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="796" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SudokuBoardDaoFactory.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="5" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="SudokuField.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="1" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="1" cb="1"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="1" cb="1"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="42"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SudokuRow.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SudokuBoard.java"><line nr="9" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="7" mb="0" cb="2"/><line nr="15" mi="0" ci="7" mb="0" cb="2"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="13" mb="0" cb="4"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="11" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="2"/><line nr="28" mi="0" ci="11" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="2"/><line nr="36" mi="0" ci="7" mb="0" cb="2"/><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="2"/><line nr="40" mi="0" ci="6" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="2"/><line nr="60" mi="0" ci="6" mb="0" cb="2"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="7" mb="0" cb="2"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="12" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="9" mb="0" cb="2"/><line nr="96" mi="0" ci="9" mb="0" cb="2"/><line nr="97" mi="0" ci="12" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="4"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="12" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="2"/><line nr="110" mi="0" ci="5" mb="0" cb="2"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="12" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="2"/><line nr="123" mi="0" ci="7" mb="0" cb="2"/><line nr="124" mi="0" ci="8" mb="0" cb="6"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="4"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="2"/><line nr="131" mi="0" ci="13" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="13" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="1" cb="1"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="1" cb="1"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="434"/><counter type="BRANCH" missed="2" covered="60"/><counter type="LINE" missed="2" covered="75"/><counter type="COMPLEXITY" missed="2" covered="40"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="891" covered="876"/><counter type="BRANCH" missed="14" covered="90"/><counter type="LINE" missed="41" covered="167"/><counter type="COMPLEXITY" missed="18" covered="77"/><counter type="METHOD" missed="9" covered="34"/><counter type="CLASS" missed="2" covered="9"/></package><counter type="INSTRUCTION" missed="891" covered="876"/><counter type="BRANCH" missed="14" covered="90"/><counter type="LINE" missed="41" covered="167"/><counter type="COMPLEXITY" missed="18" covered="77"/><counter type="METHOD" missed="9" covered="34"/><counter type="CLASS" missed="2" covered="9"/></report>